cmake_minimum_required(VERSION 2.8.3)
project(trajectory_planner)

## Compile as C++11, supported in ROS Kinetic and newer
# add_compile_options(-std=c++11)

## Force Release build-type to avoid compile-time errors
if(NOT CMAKE_CONFIGURATION_TYPES AND NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release)
endif()

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  roscpp
  geometry_msgs
  visualization_msgs
  definitions
  dynamic_reconfigure
  tf2
  tf2_ros
  tf2_geometry_msgs
)

find_package(ct_optcon REQUIRED)

## Generate messages in the 'msg' folder
# add_message_files(
#   FILES
#   Message1.msg
#   Message2.msg
# )

## Generate added messages and services with any dependencies listed here
# generate_messages(
#   DEPENDENCIES
#   std_msgs  # Or other packages containing msgs
# )

################################################
## Declare ROS dynamic reconfigure parameters ##
################################################

## To declare and build dynamic reconfigure parameters within this
## package, follow these steps:
## * In the file package.xml:
##   * add a build_depend and a exec_depend tag for "dynamic_reconfigure"
## * In this file (CMakeLists.txt):
##   * add "dynamic_reconfigure" to
##     find_package(catkin REQUIRED COMPONENTS ...)
##   * uncomment the "generate_dynamic_reconfigure_options" section below
##     and list every .cfg file to be processed

## Generate dynamic reconfigure parameters in the 'cfg' folder
generate_dynamic_reconfigure_options(
   cfg/trajectory_planner.cfg
)

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if your package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
   INCLUDE_DIRS include
   CATKIN_DEPENDS roscpp geometry_msgs visualization_msgs definitions dynamic_reconfigure tf2 tf2_ros tf2_geometry_msgs
   DEPENDS ct_optcon
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
include_directories(
  include
  ${catkin_INCLUDE_DIRS}
)


## Declare a C++ executable
## With catkin_make all packages are built within a single CMake context
## The recommended prefix ensures that target names across packages don't collide
add_executable(${PROJECT_NAME} src/trajectory_planner.cpp src/v2x_planner_interface.cpp)
add_executable(${PROJECT_NAME}_original src/trajectory_planner_original.cpp src/v2x_planner_interface_original.cpp)
add_executable(${PROJECT_NAME}_original_stabilized src/trajectory_planner_original_stabilized.cpp src/v2x_planner_interface_original_stabilized.cpp)
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 11)
set_property(TARGET ${PROJECT_NAME}_original PROPERTY CXX_STANDARD 11)
set_property(TARGET ${PROJECT_NAME}_original_stabilized PROPERTY CXX_STANDARD 11)
target_link_libraries(${PROJECT_NAME} ct_optcon ${catkin_LIBRARIES})
target_link_libraries(${PROJECT_NAME}_original ct_optcon ${catkin_LIBRARIES})
target_link_libraries(${PROJECT_NAME}_original_stabilized ct_optcon ${catkin_LIBRARIES})

add_dependencies(${PROJECT_NAME} ${PROJECT_NAME}_gencfg)
